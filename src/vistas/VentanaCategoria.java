/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import controladores.ControladorCategoria;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Categoria;

/**
 *
 * @author LENOVO
 */
public class VentanaCategoria extends javax.swing.JFrame {

    private final ControladorCategoria controlador;

    /**
     * Creates new form VentanaCategoria
     */
    public VentanaCategoria() {
        initComponents();
        setLocationRelativeTo(this);
        controlador = new ControladorCategoria();
        llenarTablaCategorias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNombreCategoria = new javax.swing.JLabel();
        txtNombreCategoria = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        btnRegistrar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblBuscarCategoria = new javax.swing.JLabel();
        txtBuscarCategroria = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblNombreCategoria.setFont(new java.awt.Font("Segoe UI Historic", 0, 17)); // NOI18N
        lblNombreCategoria.setForeground(new java.awt.Color(0, 0, 0));
        lblNombreCategoria.setText("Nombre Categor√≠a");

        txtNombreCategoria.setBackground(new java.awt.Color(255, 255, 255));
        txtNombreCategoria.setFont(new java.awt.Font("Segoe UI Historic", 0, 19)); // NOI18N
        txtNombreCategoria.setForeground(new java.awt.Color(0, 0, 0));

        tablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCategorias);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblBuscarCategoria.setFont(new java.awt.Font("Segoe UI Historic", 0, 17)); // NOI18N
        lblBuscarCategoria.setForeground(new java.awt.Color(0, 0, 0));
        lblBuscarCategoria.setText("Nombre categoria");

        txtBuscarCategroria.setBackground(new java.awt.Color(255, 255, 255));
        txtBuscarCategroria.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        txtBuscarCategroria.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(btnEditar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnRegistrar)
                            .addGap(36, 36, 36)
                            .addComponent(btnBuscar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNombreCategoria)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblBuscarCategoria)
                        .addGap(38, 38, 38)
                        .addComponent(txtBuscarCategroria, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombreCategoria)
                            .addComponent(txtNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(113, 113, 113)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrar)
                            .addComponent(btnBuscar))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEditar)
                            .addComponent(btnEliminar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBuscarCategoria)
                            .addComponent(txtBuscarCategroria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        String nombreCategoria = txtNombreCategoria.getText();

        if (nombreCategoria.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
            return;

        }

        Categoria category = controlador.buscarCategoria(nombreCategoria);
        if (category != null) {
            JOptionPane.showMessageDialog(null, "Ya existe una categor√≠a con ese nombre");
            return;
        }

        try {
            Categoria categoria = new Categoria(nombreCategoria);
            controlador.agregarCategoria(categoria);
            JOptionPane.showMessageDialog(null, "Categoria registrada");
            llenarTablaCategorias();
            limpiarCampos();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo registrar la categoria");
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int selec = tablaCategorias.getSelectedRow();

        if (selec >= 0) {
            int idCategoria = (int) tablaCategorias.getModel().getValueAt(selec, 0);

            boolean success = controlador.eliminarCategoria(idCategoria);

            if (success) {
                JOptionPane.showMessageDialog(null, "Categoria eliminada correctamente");
                llenarTablaCategorias();
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar la categoria, existe un producto con esta");
            }
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String nombreCategoria = txtBuscarCategroria.getText().toLowerCase();
        if (nombreCategoria.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el nombre de la categoria que desea buscar");
            return;
        }
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new Object[]{
            "ID", "Nombre"
        });
        tablaCategorias.setModel(modelo);
        Categoria categoria = controlador.buscarCategoria(nombreCategoria);

        if (categoria != null) {
            modelo.addRow(new Object[]{
                categoria.getIdCategoria(),
                categoria.getNombreCategoria()
            });
        } else {
            JOptionPane.showMessageDialog(null, "categoria no encontrada");
            llenarTablaCategorias();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (txtNombreCategoria.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
            return;
        }

        String nombre = txtNombreCategoria.getText();

        int selected = tablaCategorias.getSelectedRow();

        if (selected >= 0) {
            int id = (int) tablaCategorias.getModel().getValueAt(selected, 0);

            try {
                controlador.editarCategoria(id, nombre);
                JOptionPane.showMessageDialog(null, "Categoria editada correctamente");
                llenarTablaCategorias();
                limpiarCampos();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al editar la categor√≠a");
            }

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tablaCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriasMouseClicked
        // TODO add your handling code here:
        int selected = tablaCategorias.getSelectedRow();

        txtNombreCategoria.setText(tablaCategorias.getValueAt(selected, 1).toString());
    }//GEN-LAST:event_tablaCategoriasMouseClicked

    private void llenarTablaCategorias() {
        DefaultTableModel modelo = new DefaultTableModel();

        ArrayList<Categoria> categorias = controlador.listarCategorias();
        modelo.setColumnIdentifiers(new Object[]{
            "ID", "Nombre"
        });
        tablaCategorias.setModel(modelo);

        for (Categoria categoria : categorias) {
            modelo.addRow(new Object[]{
                categoria.getIdCategoria(),
                categoria.getNombreCategoria()

            });
        }
    }

    private void limpiarCampos() {
        txtNombreCategoria.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscarCategoria;
    private javax.swing.JLabel lblNombreCategoria;
    private javax.swing.JTable tablaCategorias;
    private javax.swing.JTextField txtBuscarCategroria;
    private javax.swing.JTextField txtNombreCategoria;
    // End of variables declaration//GEN-END:variables
}
